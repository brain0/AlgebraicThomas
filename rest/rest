InstallMethod( EliminateAllButOneGcd1Columns,
        "for homalg matrices",
        [ IsHomalgMatrix, IsList ],
        
  function ( M, unclean_rows, unclean_columns )
    local pos, b, i, j, r, h, u, ui, k, c, MM, Mi_, l;
    
    if Length( unclean_rows ) < 3 then
        Info( InfoLessGenerators, 2, "EliminateAllButOneGcd1Columns: nothing to do for ", Length( unclean_rows ), " unclean rows, which is less than 3" );
        return true;
    fi;
    
    pos := GetAllButOneGcd1ColumnPosition( M, unclean_rows, unclean_columns );
    
    if pos = fail then
        Info( InfoLessGenerators, "EliminateAllButOneGcd1Columns:: NO new obsolete generators: ", unclean_columns );
        return true;
    else
        b := false;
    fi;
    
    one := One( HomalgRing( M ) );
    
    while true do
        i := pos[1];
        j := pos[2];
        
        ## don't redefine (un)clean_columns/rows in this procedure, eliminate_units will do the job later!
        
        r := pos[3];
        h := pos[4];
        
        h := -MatElm( M, i, j ) * h;
        
        if compute_U then
            u := copy(Id_U);
        fi;
        
        if compute_UI then
            ui := copy(Id_U);
        fi;
        
        if compute_U or compute_UI then
            for k in [ 1 .. Length( r ) ] do
                if not IsZero( MatElm( M, r[k], j ) ) then
                    h1k := MatElm( h, 1, k );
                    if compute_U then
                        SetMatElm( u, i, r[k], h1k );
                    fi;
                    if compute_UI then
                        SetMatElm( ui, i, r[k], -h1k );
                    fi;
                fi;
            od;
        fi;
        
        if compute_U then
            U := u * U;
        fi;
        
        if compute_UI then
            UI := UI * ui;
        fi;
        
        c := ShallowCopy( unclean_columns );
        Remove( c, j );
        
        if c <> [ ] then
            
            MM := CertainRows( M, r );
            MM := CertainColumns( MM, c );
            
            MM := h * MM;
            
            Mi_ := CertainRows( M, [ i ] );
            Mi_ := CertainColumns( Mi_, c );
            
            MM := Mi_ + MM;
            
            for l in [ 1 .. Length( c ) ] do
                SetMatElm( M, i, c[l], MatElm( MM, 1, l ) );
            od;
        fi;
        
        ## force a one at the (i,j)-position
        SetMatElm( M, i, j, one );
        
        eliminate_units( M, [ i, j ] );
        
        pos :=  GetAllButOneGcd1ColumnPosition( M, unclean_rows, unclean_columns );
        
        if pos = fail then
            break;
        fi;
    od;
    
    Info( InfoLessGenerators, 2, "EliminateAllButOneGcd1Columns: the NEW list of obsolete generators: ", unclean_columns );
    
end );
